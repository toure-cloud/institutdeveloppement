# Generated by Django 5.2.5 on 2025-09-16 11:16

import developpement.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConvocationExamen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formation', models.CharField(max_length=100, unique=True)),
                ('date_examen', models.DateField()),
                ('heure_examen', models.TimeField()),
                ('lieu_examen', models.CharField(max_length=200)),
                ('salle', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Convocation Examen',
                'verbose_name_plural': 'Convocations Examens',
            },
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(blank=True, help_text='Classe Font Awesome ex: fa-globe', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('duree', models.IntegerField(help_text='Durée en heures')),
                ('cout', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('duree_heures', models.IntegerField()),
                ('formateur', models.CharField(blank=True, max_length=100)),
                ('objectifs', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('template', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partenaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('logo', models.ImageField(upload_to='partenaires/')),
                ('category', models.CharField(choices=[('academique', 'Académique'), ('institutionnel', 'Institutionnel'), ('prive', 'Privé')], default='academique', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description courte pour le tooltip')),
                ('website', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
            ],
            options={
                'verbose_name': 'Partenaire',
                'verbose_name_plural': 'Partenaires',
                'ordering': ['category', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='UE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('dashboard', 'Tableau de bord'), ('publication', 'Publication scientifique')], default='publication', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('category', models.CharField(choices=[('nature', 'Nature et Environnement'), ('culture', 'Culture et Patrimoine'), ('aventure', 'Aventure et Exploration'), ('education', 'Éducation et Recherche'), ('loisir', 'Loisirs et Détente')], max_length=20, verbose_name='Catégorie')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date prévue')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Lieu')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activites_crees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activité',
                'verbose_name_plural': 'Activités',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ImageActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='activites/images/', verbose_name='Image')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('activite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='developpement.activite')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Image d'activité",
                'verbose_name_plural': "Images d'activités",
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MarquettePedagogique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=50)),
                ('annee_academique', models.CharField(max_length=20)),
                ('credits_ects', models.IntegerField()),
                ('objectifs', models.TextField(blank=True)),
                ('competences', models.TextField(blank=True)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='maquettes/')),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maquettes', to='developpement.formation')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammeFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duree_totale', models.IntegerField(help_text='Durée en heures')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('nombre_modules', models.IntegerField()),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programmes', to='developpement.formation')),
                ('modules', models.ManyToManyField(blank=True, to='developpement.moduleformation')),
            ],
        ),
        migrations.AddField(
            model_name='formation',
            name='ues',
            field=models.ManyToManyField(related_name='formations', to='developpement.ue'),
        ),
        migrations.CreateModel(
            name='ECUE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50)),
                ('ue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecues', to='developpement.ue')),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de famille')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('lieu_naissance', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse email')),
                ('email_confirmation', models.EmailField(max_length=254, verbose_name='Confirmation email')),
                ('telephone', models.CharField(max_length=20, verbose_name='Numéro de téléphone')),
                ('cmu', models.CharField(max_length=50, unique=True, verbose_name='Numéro CMU')),
                ('cni', models.CharField(max_length=50, unique=True, verbose_name='Numéro CNI')),
                ('serie_bac', models.CharField(choices=[('A', 'Série A'), ('C', 'Série C'), ('D', 'Série D'), ('E', 'Série E'), ('F', 'Série F'), ('G', 'Série G')], default='A', max_length=1, verbose_name='Série du baccalauréat')),
                ('annee_obtentionbac', models.IntegerField(validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(developpement.models.get_current_year)], verbose_name="Année d'obtention du bac")),
                ('mention_bac', models.CharField(choices=[('TB', 'Très Bien'), ('B', 'Bien'), ('AB', 'Assez Bien'), ('P', 'Passable')], max_length=2, verbose_name='Mention au bac')),
                ('numero_bac', models.CharField(max_length=50, unique=True, verbose_name='Numéro du bac')),
                ('ecole_diplomebac', models.CharField(max_length=255, verbose_name="École d'obtention du bac")),
                ('licence', models.CharField(default='Inconnu', max_length=100, verbose_name='Type de licence')),
                ('annee_obtentionlicence', models.IntegerField(validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(developpement.models.get_current_year)], verbose_name="Année d'obtention de la licence")),
                ('photo_identite', models.ImageField(upload_to=developpement.models.photo_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), developpement.models.validate_file_size], verbose_name="Photo d'identité")),
                ('bac_scan', models.FileField(upload_to=developpement.models.bac_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png']), developpement.models.validate_file_size], verbose_name='Diplôme du bac')),
                ('diplome_scan', models.FileField(upload_to=developpement.models.diplome_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png']), developpement.models.validate_file_size], verbose_name='Diplôme de licence')),
                ('extrait_naissance', models.FileField(upload_to=developpement.models.extrait_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png']), developpement.models.validate_file_size], verbose_name='Extrait de naissance')),
                ('formation', models.CharField(max_length=100)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('E', 'En attente'), ('V', 'Validé'), ('R', 'Rejeté')], default='E', max_length=1, verbose_name="Statut de l'inscription")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inscription', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Inscription',
                'verbose_name_plural': 'Inscriptions',
                'ordering': ['-date_inscription'],
                'constraints': [models.UniqueConstraint(fields=('nom', 'prenom', 'date_naissance'), name='unique_candidate')],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('title', models.CharField(blank=True, max_length=150, verbose_name='Titre professionnel')),
                ('bio', models.TextField(blank=True, help_text='Description détaillée du membre', verbose_name='Biographie')),
                ('photo', models.ImageField(blank=True, help_text='Format recommandé : 600x600 pixels', null=True, upload_to='team/%Y/%m/%d/', verbose_name='Photo')),
                ('category', models.CharField(choices=[('recherche', 'Recherche'), ('enseignement', 'Enseignement'), ('admin', 'Administration')], default='recherche', max_length=20, verbose_name='Catégorie')),
                ('linkedin_url', models.URLField(blank=True, validators=[django.core.validators.URLValidator()], verbose_name='Profil LinkedIn')),
                ('researchgate_url', models.URLField(blank=True, validators=[django.core.validators.URLValidator()], verbose_name='Profil ResearchGate')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expertises', models.ManyToManyField(blank=True, related_name='team_members', to='developpement.expertise', verbose_name='Expertises')),
            ],
            options={
                'verbose_name': "Membre d'équipe",
                'verbose_name_plural': "Membres d'équipe",
                'ordering': ['display_order', 'last_name', 'first_name'],
                'indexes': [models.Index(fields=['slug'], name='developpeme_slug_af7a3f_idx'), models.Index(fields=['category'], name='developpeme_categor_9d0ead_idx')],
            },
        ),
    ]
